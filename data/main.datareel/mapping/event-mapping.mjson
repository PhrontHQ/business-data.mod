{
    "root": {
        "prototype": "montage/data/service/expression-data-mapping",
        "values": {
            "objectDescriptor": {"@": "EventObjectDescriptor"},
            "rawDataPrimaryKeys":["id"],
            "objectMapping": {
                "rules": {
                    "participatingResource": {
                        "<->": "{personId: personId,resourceId: resourceId}",
                        "converter": {"@": "participatingResourceForeignKeyConverter"}
                    },
                    "calendar": {
                        "<->": "calendarId",
                        "converter": {"@": "calendar-converter"}
                    },
                    "scheduledTimeRange": {
                        "<->": "scheduledTimeRange",
                        "converter": {"@": "string-to-range-converter"}
                    },
                    "actualTimeRange": {
                        "<->": "actualTimeRange",
                        "converter": {"@": "string-to-range-converter"}
                    },
                    "parent": {
                        "<->": "parentId",
                        "converter": {"@": "parentForeignKeyConverter"}
                    },
                    "children": {
                        "<->": "id",
                        "converter": {"@": "childrenForeignKeyConverter"}
                    },
                    "isBlocking": {"<->": "isBlocking"},
                    "participation": {"<->": "participation"},
                    "participationRoles": {
                        "<->": "participationRoleIds",
                        "converter": {"@": "participationRolesConverter"}
                    },
                    "participationStatus": {"<->": "participationStatus"},
                    "eventURL": {
                        "<->": "eventURL",
                        "converter": {"@": "eventURLConverter"}
                    },
                    "summary": {"<->": "summary"},
                    "description": {"<->": "description"},
                    "location": {
                        "<->": "locationId",
                        "converter": {"@": "location-converter"}
                    },
                    "color": {
                        "<->": "colorId",
                        "converter": {"@": "color-converter"}
                   },
                    "creator": {
                        "<->": "creator",
                        "converter": {"@": "event-creator-converter"}
                    },
                    "isAllDay": {"<->": "isAllDay"},
                    "endTimeUnspecified": {"<->": "endTimeUnspecified"},
                    "recurrenceRule": {"<->": "recurrenceRule"},
                    "recurringEvent": {"<->": "recurringEventId",
                        "converter": {"@": "recurringEventForeignKeyConverter"}},
                    "originalTimeRange": {
                        "<->": "originalTimeRange",
                        "converter": {"@": "string-to-range-converter"}
                    },
                    "visibility": {"<->": "visibility"},
                    "iCalUID": {"<->": "iCalUID"},
                    "sequence": {"<->": "sequence"},
                    "attendeesOmitted": {"<->": "attendeesOmitted"},
                    "extendedProperties": {"<->": "extendedProperties"},
                    "conferenceData": {
                        "<->": "conferenceData",
                        "converter": {"@": "event-conferenceData-converter"}
                    },
                    "anyoneCanAddSelf": {"<->": "anyoneCanAddSelf"},
                    "guestsCanInviteOthers": {"<->": "guestsCanInviteOthers"},
                    "guestsCanModify": {"<->": "guestsCanModify"},
                    "guestsCanSeeOtherGuests": {"<->": "guestsCanSeeOtherGuests"},
                    "privateCopy": {"<->": "privateCopy"},
                    "locked": {"<->": "locked"},
                    "attachments": {"<->": "attachments"},
                    "reminders": {
                        "<->": "reminderIds",
                        "converter": {"@": "remindersConverter"}
                    },
                    "serviceEngagement": {
                        "<->": "id",
                        "converter": {"@": "service-engagement-converter"}
                    }
               }
            },
            "rawDataMapping": {
                "rules": {
                    "personId": {"<-": "participatingResource.objectDescriptor == @PersonDescriptor ? participatingResource.primaryKey : null"},
                    "resourceId": {"<-": "participatingResource.objectDescriptor == @ResourceDescriptor ? participatingResource.primaryKey : null"}
                }
            },
            "requisitePropertyNames": [
                "participatingResource","calendar","scheduledTimeRange","actualTimeRange","parent","children","isBlocking","participation","participationRoles","participationStatus","summary","description","location","isAllDay"
            ]
        }
    },

    "calendar-converter": {
        "prototype": "montage/data/converter/raw-foreign-value-to-object-converter",
        "values": {
            "convertExpression": "id == $"
        }
    },
    "PersonForeignKeyMapping": {
        "prototype": "montage/data/service/raw-data-type-mapping",
        "properties": {
            "type": {"@": "PersonDescriptor"},
            "expression": "personId.defined()"
        }
    },
    "ResourceForeignKeyMapping": {
        "prototype": "montage/data/service/raw-data-type-mapping",
        "properties": {
            "type": {"@": "ResourceDescriptor"},
            "expression": "resourceId.defined()"
        }
    },
    "participatingResourceForeignKeyConverter": {
        "prototype": "montage/data/converter/raw-foreign-value-to-object-converter",
        "values": {
            "convertExpression": "id == $",
            "foreignDescriptorMappings": [{"@": "PersonForeignKeyMapping"},{"@": "ResourceForeignKeyMapping"}]
        }
    },
    "parentForeignKeyConverter": {
        "prototype": "montage/data/converter/raw-foreign-value-to-object-converter",
        "values": {
            "convertExpression": "id == $"
        }
    },
    "childrenForeignKeyConverter": {
        "prototype": "montage/data/converter/raw-foreign-value-to-object-converter",
        "values": {
            "convertExpression": "parentId == $"
        }
    },
    "participationRolesConverter": {
        "prototype": "montage/data/converter/raw-foreign-value-to-object-converter",
        "values": {
            "convertExpression": "$.has(id)"
        }
    },
    "eventURLConverter": {
        "prototype": "montage/core/converter/string-to-URL-converter"
    },
    "location-converter": {
        "prototype": "montage/data/converter/raw-foreign-value-to-object-converter",
        "values": {
            "convertExpression": "id == $"
        }
    },

    "EventObjectDescriptor": {
        "object": "data/main.datareel/model/event.mjson"
    },

    "PersonDescriptor": {
        "object": "data/main.datareel/model/person.mjson"
    },

    "ResourceDescriptor": {
        "object": "data/main.datareel/model/resource.mjson"
    },

    "event-creator-converter": {
        "prototype": "montage/data/converter/raw-embedded-value-to-object-converter",
        "values": {
        }
    },

    "recurringEventForeignKeyConverter": {
        "prototype": "montage/data/converter/raw-foreign-value-to-object-converter",
        "values": {
            "convertExpression": "id == $"
        }
    },

    "string-to-range-converter": {
        "prototype": "../converter/RFC3339UTC-range-string-to-range-converter"
    },

    "event-conferenceData-converter": {
        "prototype": "montage/data/converter/raw-embedded-value-to-object-converter",
        "values": {
        }
    },

    "RFC3339UTCStringToDateConverter": {
        "prototype": "montage/core/converter/RFC3339UTC-string-to-date-converter",
        "values": {
        }
    },

    "color-converter": {
        "prototype": "montage/data/converter/raw-foreign-value-to-object-converter",
        "values": {
            "convertExpression": "id == $"
        }
    },

    "remindersConverter": {
        "prototype": "montage/data/converter/raw-foreign-value-to-object-converter",
        "values": {
            "convertExpression": "$.has(id)"
        }
    },

    "service-engagement-converter": {
        "prototype": "montage/data/converter/raw-foreign-value-to-object-converter",
        "values": {
            "convertExpression": "eventId == $"
        }
    }

}
